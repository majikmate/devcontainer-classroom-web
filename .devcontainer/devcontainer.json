// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/debian
{
    "name": "Debian",
    "build": {
        "dockerfile": "Dockerfile",
        "args": {
            "GH_TOKEN": "${env:GH_TOKEN}"
        }
    },

    // Features to add to the dev container. More info: https://containers.dev/features.
    "features": {
        "ghcr.io/devcontainers/features/github-cli:latest": {
            "installDirectlyFromGitHubRelease": true,
            "version": "2.78.0"
        },
        "ghcr.io/devcontainers/features/docker-in-docker:latest": {
            "moby": true,
            "azureDnsAutoDetection": true,
            "installDockerBuildx": true,
            "installDockerComposeSwitch": true,
            "version": "28.3.3",
            "dockerDashComposeVersion": "v2"
        },
        "ghcr.io/devcontainers/features/go:latest": {
            "version": "1.25.0"
        },
        "ghcr.io/devcontainers/features/java:latest": {
            "installGradle": true,
            "installMaven": true,
            "version": "24.0.2",
            "jdkDistro": "tem",
            "gradleVersion": "9.0.0",
            "mavenVersion": "3.9.11",
            "antVersion": "1.10.15",
            "groovyVersion": "5.0.0"
        },
        "ghcr.io/devcontainers/features/node:latest": {
            "nodeGypDependencies": true,
            "version": "22.19.0",
            "pnpmVersion": "10.15.1",
            "nvmVersion": "0.40.3"
        },
        "ghcr.io/devcontainer-community/devcontainer-features/deno.com:latest": {
            "version": "v2.4.5"
        },
        "ghcr.io/devcontainers/features/python:latest": {
            "installTools": false
        },
        "ghcr.io/rocker-org/devcontainer-features/miniforge:latest": {
            "version": "25.3.0-3",
            "variant": "Miniforge3"
        },
        "ghcr.io/majikmate/classroom-codespace-feature/locales:latest": {
            "lang": "en_US.UTF-8"
        },
        "ghcr.io/majikmate/classroom-codespace-feature/git:latest": {
        },
        "ghcr.io/majikmate/classroom-codespace-feature/update-os:latest": {
        }
    },

    // Explicit feature installation order - update-os must be last
    "overrideFeatureInstallOrder": [
        "ghcr.io/devcontainers/features/github-cli",
        "ghcr.io/devcontainers/features/docker-in-docker",
        "ghcr.io/devcontainers/features/go",
        "ghcr.io/devcontainers/features/java",
        "ghcr.io/devcontainers/features/node",
        "ghcr.io/devcontainer-community/devcontainer-features/deno.com",
        "ghcr.io/devcontainers/features/python",
        "ghcr.io/rocker-org/devcontainer-features/miniforge",
        "ghcr.io/majikmate/classroom-codespace-feature/locales",
        "ghcr.io/majikmate/classroom-codespace-feature/git",
        "ghcr.io/majikmate/classroom-codespace-feature/update-os"
    ],

    // update os packages whenever the container is created
    // onCreateCommand is also triggered on automatic prebuilds
    "remoteUser": "vscode",
    "containerEnv": {
        "DEBIAN_FRONTEND": "noninteractive"
    },
    // sudo update-locale LANG="en_US.UTF-8" LC_TIME="de_AT.UTF-8" LC_NUMERIC="de_AT.UTF-8" LC_MONETARY="de_AT.UTF-8" LC_MEASUREMENT="de_AT.UTF-8"
    // "onCreateCommand": "sudo apt-get update && sudo apt-get upgrade -y && sudo apt-get autoremove -y && sudo apt-get clean && sudo rm -rf /var/lib/apt/lists/* && sudo ln -fs /usr/share/zoneinfo/Europe/Vienna /etc/localtime && sudo dpkg-reconfigure -f noninteractive tzdata && sudo mkdir -p /usr/local/share/majikmate/ && sudo touch /usr/local/share/majikmate/codespace-image-created ",

    // configure vscode environment
    "customizations": {
        "vscode": {
            "extensions": [
                "bierner.github-markdown-preview",
                "ms-vsliveshare.vsliveshare",
                "denoland.vscode-deno"
            ],
            "settings": {
                // default terminal profile
                "terminal.integrated.defaultProfile.linux": "bash",
                "terminal.integrated.profiles.linux": {
                    "bash": {
                        "path": "bash"
                    }
                    // "zsh": {
                    //     "path": "zsh"
                    // }
                },

                // hide dot folders
                "files.exclude": {
                    "**/.devcontainer": true,
                    "**/.github": true,
                    "**/.vscode": true
                },
                // open markdown files in preview mode
                "workbench.editorAssociations": {
                    "*.md": "vscode.markdown.preview.editor"
                },
                // configure the innitial default theme
                "workbench.colorTheme": "Visual Studio Dark",
                // enable to use deno as the typescript language server, see "https://docs.deno.com/runtime/getting_started/installation/"
                "deno.enable": true,
                // enable to use deno as the testing framework
                "deno.codeLens.testArgs": ["--allow-all", "--check=all"],

                // Git settings for smooth workflows within vscode
                //
                // Especially "git.autoStash": true and "git.rebaseWhenSync": true are imortant so that
                // when the starter repo is updated, the changes are automatically fetched and rebased
                // to the student repos without any conflicts during pull/push/sync operations. Local
                // changes are stashed before pulling and reapplied after the sync.
                //
                // To configure these option also for the command line git, use the following commands:
                // git config --global pull.rebase true
                // git config --global rebase.autoStash true

                // ===================================
                // git settings, do not change

                // "git.autofetch": true -> automatically fetch changes from the starter repo
                "git.autofetch": true,

                // "git.autoStash": true -> automatically stash changes before pulling
                "git.autoStash": true,

                // "git.confirmSync": false -> do not ask for confirmation before syncing
                "git.confirmSync": false,

                // "git.enableSmartCommit": true -> automatically stage all changes before commit if no changes are already staged
                "git.enableSmartCommit": true,

                // "git.postCommitCommand": "sync" -> automatically sync changes after commit
                "git.postCommitCommand": "sync",

                // "git.rebaseWhenSync": true -> automatically rebase changes when syncing
                "git.rebaseWhenSync": true,

                // "git.rememberPostCommitCommand": false -> do not remember the last post-commit and always switch back to "sync"
                "git.rememberPostCommitCommand": false,

                // "git.useEditorAsCommitInput": false -> do not use the editor as the default commit message input
                "git.useEditorAsCommitInput": false,

                // ===================================
                // other settings, do not change

                // "editor.formatOnSave": automatically format files on save
                "editor.formatOnSave": true,

                // "editor.insertSpaces": true -> insert spaces when pressing Tab
                "editor.insertSpaces": true,

                // "editor.tabSize": use x spaces for indentation
                "editor.tabSize": 4,

                // "editor.detectIndentation": false -> do not detect indentation so that even when indentation is mixed, the editor will use the defined tab/space settings
                "editor.detectIndentation": false,

                // "editor.defaultFormatter": "denoland.vscode-deno" -> use the Deno formatter and linter as the default ones
                "editor.defaultFormatter": "denoland.vscode-deno"
            }
        }
    }
    // Use 'forwardPorts' to make a list of ports inside the container available locally.
    //"forwardPorts": []
}
